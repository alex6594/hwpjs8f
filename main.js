(()=>{"use strict";class e{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.userName=e,this.isOwner=s}render(){const e=document.createElement("li");e.className="user_item",this.isOwner&&e.classList.add("active_user");const s=document.createElement("div");s.className="user";const t=document.createElement("div");t.className="user_image";const n=document.createElement("img");n.src="assets/6c53c0a1c12e6d7eaa36e98c6696b38d.png";const i=document.createElement("div");i.className="user_name";const a=document.createElement("h5");return a.className="user__name",a.textContent=this.isOwner?"Вы":this.userName,n.alt=a.textContent,t.appendChild(n),i.appendChild(a),s.appendChild(t),s.appendChild(i),e.appendChild(s),e}}class s{constructor(e,s,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.userName=e,this.message=s,this.isOwner=n,this.date=t}render(){const e=document.createElement("li");e.className=this.isOwner?"outgoing_msg":"incoming_msg";const s=document.createElement("div");s.className="msg";const t=document.createElement("div");t.className="msg_header";const n=document.createElement("span");n.className="msg_date_time",n.textContent=this.date;const i=document.createElement("span");i.className="msg_user",i.textContent=`${this.userName}, `,t.appendChild(i),t.appendChild(n);const a=document.createElement("p");return a.className="msg_text",a.textContent=this.message,s.appendChild(t),s.appendChild(a),e.appendChild(s),e}}const t="hidden",n="is-invalid";class i{constructor(e,s){this.parentEl=e,this.urlWebSocket=s,this.ws=null}static get formChatHTML(){return'\n      <div class="messaging">\n        <div class="inbox_msg">\n          <div class="left_side">\n            <div class="heading_panel">\n              <div class="recent_heading">\n                <h4>Участники</h4>\n              </div>\n            </div>\n            <ul class="list-unstyled users_list" data-id="users"></ul>\n          </div>\n\n          <div class="right_side">\n            <div class="heading_panel">\n              <div class="recent_heading">\n                <h4>Сообщения</h4>\n              </div>\n            </div>\n            <div class="messages">\n              <ul class="msg_history list-unstyled" data-id="messages"></ul>\n              <div class="type_msg">\n                <form data-id="form-message">\n                  <input type="text" data-id="message" placeholder=\'Введите сообщение и нажмите "Enter"...\' />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>    \n    '}static get loadingHTML(){return`\n      <div class="form-processing ${t}">\n        <div class="overlay" id="overlay"></div>\n        <div class="loading-process" id="loadingProcess"></div>\n      </div>\n    `}static get formErrorHTML(){return`\n      <div class="dialog-error ${t}">\n        <div class="overlay" id="overlay"></div>\n        <form class="form-ticket-delete row g-3">\n          <div class="col-12">\n            <div class="d-flex justify-content-center">\n              <h5 class="form-title">Ошибка</h5>\n            </div>\n            <p></p>\n          </div>\n          <div class="col-12 d-flex justify-content-end">\n            <button type="submit" value="submit" class="submit-buttom btn btn-primary ms-2">OK</button>\n          </div>\n        </form>\n      </div>\n      `}static get formLoginHTML(){return'\n      <div class="dialog-login" data-id="dialog-login">\n        <div class="overlay" id="overlay"></div>\n        <form class="form-login row g-3" data-id="form-login">\n          <div class="col-12 d-flex justify-content-center">\n            <h5 class="form-title">Выберите псевдоним</h5>\n          </div>\n          <div class="col-12">\n            <input type="text" class="form-control" data-id = "username" required placeholder="Введите Ваше имя">\n            <div class="invalid-feedback">\n              Заданное имя уже занято. Выберите другое имя.\n            </div>\n          </div>\n          <div class="col-12 d-flex justify-content-center">\n            <button type="submit" value="submit" class="submit-buttom btn btn-primary ms-2">Продолжить</button>\n          </div>\n        </form>\n      </div>\n    '}static idSelector(e){return`[data-id="${e}"]`}static get formLoginSelector(){return".form-login"}wsConnect(){this.ws?this.ws.close(3001):(this.ws=new WebSocket(this.urlWebSocket),this.wsOpen=this.wsOpen.bind(this),this.ws.addEventListener("open",this.wsOpen),this.wsClose=this.wsClose.bind(this),this.ws.addEventListener("close",(e=>this.wsClose(e))),this.wsMessage=this.wsMessage.bind(this),this.ws.addEventListener("message",(e=>this.wsMessage(e))),this.wsError=this.wsError.bind(this),this.ws.addEventListener("error",(e=>this.wsError(e))))}run(){this.bindToDOM(),this.wsConnect(),this.init()}bindToDOM(){this.parentEl.innerHTML="",this.parentEl.innerHTML+=i.loadingHTML,this.parentEl.innerHTML+=i.formErrorHTML,this.parentEl.innerHTML+=i.formLoginHTML,this.parentEl.innerHTML+=i.formChatHTML}init(){this.dialogLogin=this.parentEl.querySelector(i.idSelector("dialog-login")),this.ulUsers=this.parentEl.querySelector(i.idSelector("users")),this.ulMessages=this.parentEl.querySelector(i.idSelector("messages")),this.formMessage=this.parentEl.querySelector(i.idSelector("form-message")),this.inputUserName=this.parentEl.querySelector(i.idSelector("username")),this.onChangeUserName=this.onChangeUserName.bind(this),this.inputUserName.addEventListener("keydown",this.onChangeUserName);const e=this.dialogLogin.querySelector(i.idSelector("form-login"));this.onSubmitLogin=this.onSubmitLogin.bind(this),e.addEventListener("submit",(e=>this.onSubmitLogin(e))),this.onSendMessage=this.onSendMessage.bind(this),this.formMessage.addEventListener("submit",(e=>this.onSendMessage(e)))}wsOpen(){console.log(`Соединение установлено. URL: ${this.urlWebSocket}`)}wsClose(e){e.wasClean?(console.log("Соединение закрыто."),this.ws=null):console.log("Обрыв соединения!"),console.log(`Код: ${e.code}; причина: ${e.reason}`)}wsMessage(i){const a=JSON.parse(i.data);if(a.renderUsers&&(this.users=a.names,this.users.forEach((s=>{this.ulUsers.appendChild(new e(s).render())}))),a.nameIsFree){this.dialogLogin.classList.add(t);const s=new e(a.name,!0).render();this.ulUsers.appendChild(s)}else!1===a.nameIsFree&&this.inputUserName.classList.add(n);a.renderName?this.ulUsers.appendChild(new e(a.name).render()):(a.closeUser&&[...this.ulUsers.querySelectorAll("li")].forEach((e=>{e.querySelector(".user__name").textContent===a.name&&e.remove()})),a.renderOwnMessage&&this.ulMessages.appendChild(new s(a.name,a.message,a.date,!0).render()),a.renderMessage&&this.ulMessages.appendChild(new s(a.name,a.message,a.date).render()),a.renderMessages&&a.messages.forEach((e=>{this.ulMessages.appendChild(new s(e.name,e.message,e.date).render())})))}wsError(e){console.log(`${this} Ошибка: ${e.message}`)}onSubmitLogin(e){e.preventDefault();const s=this.inputUserName.value;this.ws.send(JSON.stringify({userName:s,chooseUserName:!0}))}onSendMessage(e){e.preventDefault();const s=this.formMessage.querySelector(i.idSelector("message")).value;this.ws.send(JSON.stringify({chatMessage:!0,messageText:s})),e.currentTarget.reset()}onChangeUserName(){this.inputUserName.classList.contains(n)&&this.inputUserName.classList.remove(n)}}new i(document.querySelector("#widget-container"),"wss://sse-wss-chat.onrender.com//ws").run()})();
//# sourceMappingURL=main.js.map